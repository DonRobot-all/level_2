Задача 1.
В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность. 
В случае с английским алфавитом очки распределяются так:

    A, E, I, O, U, L, N, S, T, R – 1 очко;
    D, G – 2 очка;
    B, C, M, P – 3 очка;
    F, H, V, W, Y – 4 очка;
    K – 5 очков;
    J, X – 8 очков;
    Q, Z – 10 очков.

А русские буквы оцениваются так:

    А, В, Е, И, Н, О, Р, С, Т – 1 очко;
    Д, К, Л, М, П, У – 2 очка;
    Б, Г, Ё, Ь, Я – 3 очка;
    Й, Ы – 4 очка;
    Ж, З, Х, Ц, Ч – 5 очков;
    Ш, Э, Ю – 8 очков;
    Ф, Щ, Ъ – 10 очков.

Напишите программу, которая вычисляет стоимость введенного пользователем 
слова. Будем считать, что на вход подается только одно слово, которое 
содержит либо только английские, либо только русские буквы.


    Пример ввода:
    ноутбук

    Пример вывода:
    12

Задача 2.

Турист собирается в поход. Он сможет нести N кг вещей. Но вещей, 
которые он запланировал уложить в рюкзак, оказалось намного больше. 
Нужно определить, какие вещи от наиболее тяжелых к самым легким 
поместятся в рюкзак.

Пример ввода:
10

Пример вывода:
палатка
спальный мешок
удочка
термос
салфетки
жвачка

things = {
    'зажигалка': 20, 'компас': 100, 'фрукты': 500, 'рубашка': 300,
    'термос': 1000, 'аптечка': 200, 'куртка': 600, 'бинокль': 400, 'удочка': 1200,
    'салфетки': 40, 'бутерброды': 820, 'палатка': 5500, 'спальный мешок': 2250, 
    'жвачка': 10
    }



Задача 3. Email-адреса

Данные об email-адресах студентов хранятся в словаре:
emails = {'mgu.edu': ['andrei_serov', 'alexander_pushkin', 'elena_belova', 'kirill_stepanov'],
      	'gmail.com': ['alena.semyonova', 'ivan.polekhin', 'marina_abrabova'],
      	'msu.edu': ['sergei.zharkov', 'julia_lyubimova', 'vitaliy.smirnoff'],
      	'yandex.ru': ['ekaterina_ivanova', 'glebova_nastya'],
      	'harvard.edu': ['john.doe', 'mark.zuckerberg', 'helen_hunt'],
      	'mail.ru': ['roman.kolosov', 'ilya_gromov', 'masha.yashkina']}

Нужно дополнить код таким образом, чтобы он вывел все адреса в алфавитном порядке и в формате имя_пользователя@домен.


Задача 4
Дана строка в виде случайной последовательности чисел от 0 до 9.
Требуется создать словарь, который в качестве ключей будет принимать данные числа (т. е. ключи будут типом int), 
а в качестве значений – количество этих чисел в имеющейся последовательности. 
 

Задача 5
Напишите программу, которая объединяет два словаря и суммирует значения одинаковых ключей.
dict1 = {'яблоки': 100, 'бананы': 333, 'груши': 200,
         'апельсины': 300, 'ананасы': 45, 'лимоны': 98,
     	'сливы': 76, 'манго': 34, 'виноград': 90, 'лаймы': 230}
dict2 = {'яблоки': 300, 'груши': 200, 'бананы': 400,
     	'малина': 777, 'ананасы': 12, 'лаймы': 123, 'черника': 111, 'арбузы': 666}


Задача 6: Коты и владельцы

В базе данных ветеринарной клиники информация о пациентах-котах хранится в списке кортежей. 
Данные о кошках и их владельцах записаны в формате «Кличка животного, Возраст животного, 
Имя владельца, Фамилия владельца»:
cats = [('Мартин', 5, 'Алексей', 'Егоров'),
    	('Фродо', 3, 'Анна', 'Самохина'),
    	('Вася', 4, 'Андрей', 'Белов'),
    	('Муся', 7, 'Игорь', 'Бероев'),
    	('Изольда', 2, 'Игорь', 'Бероев'),
    	('Снейп', 1, 'Марина', 'Апраксина'),
    	('Лютик', 4, 'Виталий', 'Соломин'),
    	('Снежок', 3, 'Марина', 'Апраксина'),
    	('Марта', 5, 'Сергей', 'Колесников'),
    	('Буся', 12, 'Алена', 'Федорова'),
    	('Джонни', 10, 'Игорь', 'Андропов'),
    	('Мурзик', 1,'Даниил', 'Невзоров'),
    	('Барсик', 2, 'Виталий', 'Соломин'),
    	('Рыжик', 7, 'Владимир', 'Медведев'),
        ('Матильда', 8, 'Андрей', 'Белов'),
    	('Гарфилд', 3, 'Александр', 'Березуев')]
Обнаружилось, что имена некоторых владельцев повторяются, потому что у них несколько кошек. 
Необходимо оптимизировать хранение данных таким образом, чтобы для каждого владельца при выводе 
на печать данные о всех его животных отображались в одной строке.
Игорь Бероев: Муся, 7; Изольда, 2


Задача 7: Редкое слово

Напишите программу, которая принимает на вход строку, и выводит слово, которое встречается во фразе реже всего. 
Если редких слов несколько, нужно вывести то, которое меньше в лексикографическом порядке. Регистр слов не 
учитывается, знаки препинания в предложениях игнорируются.

    Пример ввода:
    дом, милый дом, милый.

    Пример вывода:
    дом
